// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package garage_di

import (
	"github.com/gin-gonic/gin"
	"github.com/gsxhnd/garage/garage_server/dao"
	"github.com/gsxhnd/garage/garage_server/handler"
	"github.com/gsxhnd/garage/garage_server/middleware"
	"github.com/gsxhnd/garage/garage_server/routes"
	"github.com/gsxhnd/garage/garage_server/service"
	"github.com/gsxhnd/garage/utils"
)

// Injectors from wire.go:

func InitApp(path string) (*Application, error) {
	config, err := utils.NewConfig(path)
	if err != nil {
		return nil, err
	}
	engine := gin.New()
	logger := utils.NewLogger(config)
	database, err := dao.NewDatabase(config, logger)
	if err != nil {
		return nil, err
	}
	testDao := dao.NewTestDao(database)
	testService := service.NewTestService(logger, testDao)
	pingHandler := handler.NewPingHandle(logger, testService)
	websocketHandler := handler.NewWebsocketHandler(logger)
	handlerHandler := handler.Handler{
		PingHandler:      pingHandler,
		WebsocketHandler: websocketHandler,
	}
	middlewarer := middleware.NewMiddleware(logger)
	routers := routes.NewRouter(config, engine, handlerHandler, middlewarer)
	application := NewApplication(config, routers)
	return application, nil
}
